name: e2e_tests_prod
run-name: ‚öôÔ∏è E2E tests PROD

# will run every week on Monday at 09:00 (Kiev TZ) / 04:00 EST
on:
#   schedule:
#     - cron: '0 6 * * 1'
  push:
    branches:
      - template

# variables https://github.com/alexzavg/playwright_automation_showcase/settings/variables/actions
env:
  TZ:              ${{vars.TZ}}
  ENV_NAME:        ${{vars.PROD_ENV_NAME}}
  TEST_SUITE:      ${{vars.E2E_TESTS_PROD}}
  SLACK_CHANNEL:   ${{vars.SLACK_CHANNEL}}
  SLACK_WEBHOOK:   ${{vars.SLACK_WEBHOOK}}
  SLACK_USER:      ${{vars.SLACK_USER}}
  CI_PIPELINE_URL: "https://github.com/alexzavg/playwright_automation_showcase/actions/runs/${{github.run_id}}"
  NODE_VERSION:    18.x

jobs:
  e2e_tests:
    name: ‚öôÔ∏è E2E tests PROD
    runs-on: ubuntu-latest
    steps:
    - name: üîé List all environment variables
      run: env | sort

    - name: Checkout
      uses: actions/checkout@v4

    - name: üìó Use node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: üîΩ Install dependencies
      run: |
        npm install
        npm install -g ts-node
        npx playwright install chrome

    - name: üìù Create .env file
      run: echo "${{secrets.CONFIG_PROD}}" > .env.prod

    - name: ‚öôÔ∏è Run E2E tests
      run: xvfb-run npm run $TEST_SUITE

    - name: üìä Deploy HTML Report
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        publish_dir: ./html-report

    - name: Notify Slack about success
      if: success()
      run: |
        curl -X POST -H 'Content-type: application/json' --data "{\"channel\":\"$SLACK_CHANNEL\",\"username\":\"Github\",\"attachments\":[{\"color\":\"#2EB67D\",\"text\":\":test_tube: :white_check_mark: Pod B *$ENV_NAME*: test suite *$TEST_SUITE* has succeeded, <$CI_PIPELINE_URL|view logs>\",\"footer\":\"Time: $(TZ=$TZ date)\"}]}" $SLACK_WEBHOOK

    - name: Notify Slack about failure
      if: failure()
      run: |
        curl -X POST -H 'Content-type: application/json' --data "{\"channel\":\"$SLACK_CHANNEL\",\"username\":\"Github\",\"attachments\":[{\"color\":\"#E01E5A\",\"text\":\":test_tube: :x: Pod B *$ENV_NAME*: test suite *$TEST_SUITE* has failed, <$CI_PIPELINE_URL|view logs>, <$SLACK_USER>\",\"footer\":\"Time: $(TZ=$TZ date)\"}]}" $SLACK_WEBHOOK

    - name: Notify Slack about cancellation
      if: cancelled()
      run: |
        curl -X POST -H 'Content-type: application/json' --data "{\"channel\":\"$SLACK_CHANNEL\",\"username\":\"Github\",\"attachments\":[{\"color\":\"#808080\",\"text\":\":test_tube: :black_square_for_stop: Pod B *$ENV_NAME*: test suite *$TEST_SUITE* was cancelled, <$CI_PIPELINE_URL|view logs>, <$SLACK_USER>\",\"footer\":\"Time: $(TZ=$TZ date)\"}]}" $SLACK_WEBHOOK